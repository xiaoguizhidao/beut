<?php

    $magicToolboxHelper = Mage::helper('magiczoomplus/settings');
    if($magicToolboxHelper->isModuleOutputEnabled()) {
        //$moduleName = $this->getRequest()->getModuleName();       //catalog   review  checkout    catalog     cms     catalogsearch   catalogsearch   wishlist
        //$this->getRequest()->getRouteName()                       //catalog   review  checkout    catalog     cms     catalogsearch   catalogsearch   wishlist
        $controllerName = $this->getRequest()->getControllerName(); //product   product cart        category    index   result          advanced        index
        $actionName = $this->getRequest()->getActionName();         //view      list    configure   view        index   index           result          configure

        $productPage = false;
        if(in_array($controllerName, array('product', 'cart'))) {
            $page = 'product';
            if($actionName == 'view') {
                $productPage = true;
            }
        } else if($controllerName == 'index' && ($actionName == 'configure' || $actionName == 'view')) {
            $page = 'product';
            if($actionName != 'view') {
                //NOTE: if we need this for 'configure' action !?
                $productPage = true;
            }
        } else {
            $page = 'category';
        }

        $tool = $magicToolboxHelper->loadTool('default');
        $tool->params->resetProfile();

        $force = $tool->params->checkValue('include-headers-on-all-pages', 'Yes', 'default');
        $recentlyViewedProductsBlockEffectEnabled = !$tool->params->checkValue('enable-effect', 'No', 'recentlyviewedproductsblock');

        $magic360ClassName = Mage::registry('magic360ClassName');
        if($magic360ClassName && !$force && !$recentlyViewedProductsBlockEffectEnabled) {
            return;
        }

        if($force || $recentlyViewedProductsBlockEffectEnabled || !$tool->params->checkValue('enable-effect', 'No', $page)) {
            echo $tool->getHeadersTemplate(str_replace('/magiczoomplus.js', '', $this->getSkinUrl('js/magiczoomplus.js')), str_replace('/magiczoomplus.css', '', $this->getSkinUrl('css/magiczoomplus.css')));
            if(/*$page == 'product' && */$tool->params->checkValue('magicscroll', 'yes', $page)) {
                $scroll = $magicToolboxHelper->loadScroll();
                echo $scroll->getHeadersTemplate(str_replace('/magicscroll.js', '', $this->getSkinUrl('js/magicscroll.js')), str_replace('/magicscroll.css', '', $this->getSkinUrl('css/magicscroll.css')));
            }
            if($productPage && !$tool->params->checkValue('enable-effect', 'No', 'product')) {
?>
<script type="text/javascript" src="<?php echo $this->getSkinUrl('js/magictoolbox_utils.js'); ?>"></script>
<script type="text/javascript">
    var magicToolboxOptionTitles = ['<?php echo strtolower(trim(preg_replace('/\s*,\s*/is', '\',\'', $tool->params->getValue('option-associated-with-images', 'product')))); ?>'];
    var magicToolboxSwitchMetod = '<?php echo strtolower($tool->params->getValue('selectors-change', 'product')); ?>';
    var magicToolboxMouseoverDelay = <?php echo $tool->params->checkValue('selectors-change', 'mouseover', 'product') ? intval($tool->params->getValue('selectors-mouseover-delay', 'product')) : 0; ?>;
    $mjs(window).je1('load', function() {
        MagicToolboxPrepareOptions();
    });
</script>
<?php
            }
        }

    }

?>
